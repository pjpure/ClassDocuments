////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Lab8.vf
// /___/   /\     Timestamp : 11/04/2020 15:47:42
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/.Xilinx/lab8/Lab8.vf -w C:/.Xilinx/lab8/Lab8.sch
//Design Name: Lab8
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module D4_16E_HXILINX_Lab8 (D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, A0, A1, A2, A3, E);
    

   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;
   output D8;
   output D9;
   output D10;
   output D11;
   output D12;
   output D13;
   output D14;
   output D15;

   input  A0;
   input  A1;
   input  A2;
   input  A3;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;
   reg D4;
   reg D5;
   reg D6;
   reg D7;
   reg D8;
   reg D9;
   reg D10;
   reg D11;
   reg D12;
   reg D13;
   reg D14;
   reg D15;

      always @ (A0 or A1 or A2 or A3 or E)
      begin
         if(!E)
           {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0000;
        else
        begin
           case({A3,A2,A1,A0})
             4'b0000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0001;
             4'b0001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0010;
             4'b0010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0100;
             4'b0011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_1000;
             4'b0100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0001_0000;
             4'b0101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0010_0000;
             4'b0110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0100_0000;
             4'b0111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_1000_0000;
             4'b1000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0001_0000_0000;
             4'b1001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0010_0000_0000;
             4'b1010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0100_0000_0000;
             4'b1011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_1000_0000_0000;
             4'b1100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0001_0000_0000_0000;
             4'b1101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0010_0000_0000_0000;
             4'b1110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0100_0000_0000_0000;
             4'b1111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b1000_0000_0000_0000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module OR6_HXILINX_Lab8 (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = (I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_Lab8 (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Lab8(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_Lab8(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module BCD27_MUSER_Lab8(Bit_0, 
                        Bit_1, 
                        Bit_2, 
                        Bit_3, 
                        A_7, 
                        B_7, 
                        C_7, 
                        D_7, 
                        E_7, 
                        F_7, 
                        G_7);

    input Bit_0;
    input Bit_1;
    input Bit_2;
    input Bit_3;
   output A_7;
   output B_7;
   output C_7;
   output D_7;
   output E_7;
   output F_7;
   output G_7;
   
   wire A;
   wire B;
   wire C;
   wire D0;
   wire D1;
   wire D2;
   wire D3;
   wire D4;
   wire D5;
   wire D6;
   wire D7;
   wire D8;
   wire D9;
   wire D10;
   wire D11;
   wire D12;
   wire D13;
   wire D14;
   wire D15;
   wire E;
   wire F;
   wire G;
   wire XLXN_37;
   wire XLXN_38;
   
   (* HU_SET = "XLXI_1_10" *) 
   D4_16E_HXILINX_Lab8  XLXI_1 (.A0(Bit_0), 
                               .A1(Bit_1), 
                               .A2(Bit_2), 
                               .A3(Bit_3), 
                               .E(XLXN_37), 
                               .D0(D0), 
                               .D1(D1), 
                               .D2(D2), 
                               .D3(D3), 
                               .D4(D4), 
                               .D5(D5), 
                               .D6(D6), 
                               .D7(D7), 
                               .D8(D8), 
                               .D9(D9), 
                               .D10(D10), 
                               .D11(D11), 
                               .D12(D12), 
                               .D13(D13), 
                               .D14(D14), 
                               .D15(D15));
   OR4  XLXI_25 (.I0(D12), 
                .I1(D7), 
                .I2(D1), 
                .I3(D0), 
                .O(G));
   OR5  XLXI_26 (.I0(D13), 
                .I1(D7), 
                .I2(D3), 
                .I3(D2), 
                .I4(D1), 
                .O(F));
   (* HU_SET = "XLXI_27_11" *) 
   OR6_HXILINX_Lab8  XLXI_27 (.I0(D9), 
                             .I1(D7), 
                             .I2(D5), 
                             .I3(D4), 
                             .I4(D3), 
                             .I5(D1), 
                             .O(E));
   OR4  XLXI_31 (.I0(D11), 
                .I1(D13), 
                .I2(D4), 
                .I3(D1), 
                .O(A));
   VCC  XLXI_32 (.P(XLXN_37));
   INV  XLXI_33 (.I(G), 
                .O(G_7));
   INV  XLXI_34 (.I(F), 
                .O(F_7));
   INV  XLXI_35 (.I(E), 
                .O(E_7));
   INV  XLXI_36 (.I(XLXN_38), 
                .O(D_7));
   INV  XLXI_37 (.I(C), 
                .O(C_7));
   INV  XLXI_38 (.I(B), 
                .O(B_7));
   INV  XLXI_39 (.I(A), 
                .O(A_7));
   OR5  XLXI_40 (.I0(D15), 
                .I1(D10), 
                .I2(D7), 
                .I3(D4), 
                .I4(D1), 
                .O(XLXN_38));
   OR4  XLXI_41 (.I0(D15), 
                .I1(D14), 
                .I2(D12), 
                .I3(D2), 
                .O(C));
   (* HU_SET = "XLXI_43_12" *) 
   OR6_HXILINX_Lab8  XLXI_43 (.I0(D15), 
                             .I1(D14), 
                             .I2(D12), 
                             .I3(D11), 
                             .I4(D6), 
                             .I5(D5), 
                             .O(B));
endmodule
`timescale 1ns / 1ps

module selectCommon_MUSER_Lab8(Clock, 
                               com0, 
                               com1, 
                               com2, 
                               com3);

    input Clock;
   output com0;
   output com1;
   output com2;
   output com3;
   
   wire XLXN_19;
   wire XLXN_22;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_50;
   wire XLXN_51;
   
   (* HU_SET = "XLXI_5_13" *) 
   CB2CE_HXILINX_Lab8  XLXI_5 (.C(Clock), 
                              .CE(XLXN_22), 
                              .CLR(XLXN_19), 
                              .CEO(), 
                              .Q0(XLXN_50), 
                              .Q1(XLXN_46), 
                              .TC());
   GND  XLXI_6 (.G(XLXN_19));
   VCC  XLXI_8 (.P(XLXN_22));
   OR2  XLXI_20 (.I0(XLXN_46), 
                .I1(XLXN_50), 
                .O(com0));
   INV  XLXI_21 (.I(XLXN_46), 
                .O(XLXN_47));
   OR2  XLXI_22 (.I0(XLXN_47), 
                .I1(XLXN_50), 
                .O(com1));
   INV  XLXI_23 (.I(XLXN_50), 
                .O(XLXN_51));
   OR2  XLXI_24 (.I0(XLXN_46), 
                .I1(XLXN_51), 
                .O(com2));
   OR2  XLXI_25 (.I0(XLXN_47), 
                .I1(XLXN_51), 
                .O(com3));
endmodule
`timescale 1ns / 1ps

module div2_MUSER_Lab8(clock_in, 
                       clock_out);

    input clock_in;
   output clock_out;
   
   wire XLXN_18;
   wire XLXN_19;
   
   (* HU_SET = "XLXI_8_14" *) 
   FJKC_HXILINX_Lab8  XLXI_8 (.C(clock_in), 
                             .CLR(XLXN_18), 
                             .J(XLXN_19), 
                             .K(XLXN_19), 
                             .Q(clock_out));
   VCC  XLXI_9 (.P(XLXN_19));
   INV  XLXI_10 (.I(XLXN_19), 
                .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module DIV_MUSER_Lab8(CI, 
                      CO);

    input CI;
   output CO;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   
   div2_MUSER_Lab8  XLXI_1 (.clock_in(CI), 
                           .clock_out(XLXN_1));
   div2_MUSER_Lab8  XLXI_2 (.clock_in(XLXN_1), 
                           .clock_out(XLXN_2));
   div2_MUSER_Lab8  XLXI_3 (.clock_in(XLXN_2), 
                           .clock_out(XLXN_3));
   div2_MUSER_Lab8  XLXI_4 (.clock_in(XLXN_3), 
                           .clock_out(XLXN_7));
   div2_MUSER_Lab8  XLXI_5 (.clock_in(XLXN_7), 
                           .clock_out(XLXN_4));
   div2_MUSER_Lab8  XLXI_6 (.clock_in(XLXN_4), 
                           .clock_out(XLXN_5));
   div2_MUSER_Lab8  XLXI_7 (.clock_in(XLXN_5), 
                           .clock_out(XLXN_6));
   div2_MUSER_Lab8  XLXI_8 (.clock_in(XLXN_6), 
                           .clock_out(CO));
endmodule
`timescale 1ns / 1ps

module mux16_4_MUSER_Lab8(Clock, 
                          In0_0, 
                          In0_1, 
                          In0_2, 
                          In0_3, 
                          In1_0, 
                          In1_1, 
                          In1_2, 
                          In1_3, 
                          In3, 
                          S0, 
                          S1, 
                          S2, 
                          S3);

    input Clock;
    input In0_0;
    input In0_1;
    input In0_2;
    input In0_3;
    input In1_0;
    input In1_1;
    input In1_2;
    input In1_3;
    input In3;
   output S0;
   output S1;
   output S2;
   output S3;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_30;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   
   (* HU_SET = "XLXI_1_15" *) 
   M4_1E_HXILINX_Lab8  XLXI_1 (.D0(In0_0), 
                              .D1(In1_0), 
                              .D2(In3), 
                              .D3(XLXN_44), 
                              .E(XLXN_26), 
                              .S0(XLXN_43), 
                              .S1(XLXN_42), 
                              .O(S0));
   (* HU_SET = "XLXI_2_16" *) 
   M4_1E_HXILINX_Lab8  XLXI_2 (.D0(In0_2), 
                              .D1(In1_2), 
                              .D2(XLXN_46), 
                              .D3(XLXN_14), 
                              .E(XLXN_11), 
                              .S0(XLXN_43), 
                              .S1(XLXN_42), 
                              .O(S2));
   (* HU_SET = "XLXI_3_17" *) 
   M4_1E_HXILINX_Lab8  XLXI_3 (.D0(In0_3), 
                              .D1(In1_3), 
                              .D2(XLXN_47), 
                              .D3(XLXN_13), 
                              .E(XLXN_10), 
                              .S0(XLXN_43), 
                              .S1(XLXN_42), 
                              .O(S3));
   (* HU_SET = "XLXI_4_18" *) 
   CB2CE_HXILINX_Lab8  XLXI_4 (.C(Clock), 
                              .CE(XLXN_8), 
                              .CLR(XLXN_7), 
                              .CEO(), 
                              .Q0(XLXN_43), 
                              .Q1(XLXN_42), 
                              .TC());
   GND  XLXI_5 (.G(XLXN_7));
   VCC  XLXI_6 (.P(XLXN_8));
   VCC  XLXI_7 (.P(XLXN_10));
   VCC  XLXI_8 (.P(XLXN_11));
   VCC  XLXI_9 (.P(XLXN_26));
   VCC  XLXI_10 (.P(XLXN_27));
   GND  XLXI_11 (.G(XLXN_45));
   (* HU_SET = "XLXI_14_19" *) 
   M4_1E_HXILINX_Lab8  XLXI_14 (.D0(In0_1), 
                               .D1(In1_1), 
                               .D2(XLXN_45), 
                               .D3(XLXN_30), 
                               .E(XLXN_27), 
                               .S0(XLXN_43), 
                               .S1(XLXN_42), 
                               .O(S1));
   GND  XLXI_19 (.G(XLXN_46));
   GND  XLXI_20 (.G(XLXN_47));
   VCC  XLXI_21 (.P(XLXN_44));
   VCC  XLXI_22 (.P(XLXN_30));
   VCC  XLXI_23 (.P(XLXN_14));
   VCC  XLXI_24 (.P(XLXN_13));
endmodule
`timescale 1ns / 1ps

module fullAdder_MUSER_Lab8(A, 
                            B, 
                            C, 
                            Carray, 
                            SUM);

    input A;
    input B;
    input C;
   output Carray;
   output SUM;
   
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_6));
   XOR2  XLXI_2 (.I0(C), 
                .I1(XLXN_6), 
                .O(SUM));
   AND2  XLXI_3 (.I0(XLXN_6), 
                .I1(C), 
                .O(XLXN_7));
   AND2  XLXI_4 (.I0(B), 
                .I1(A), 
                .O(XLXN_8));
   OR2  XLXI_6 (.I0(XLXN_8), 
               .I1(XLXN_7), 
               .O(Carray));
endmodule
`timescale 1ns / 1ps

module Sum_MUSER_Lab8(a0, 
                      a1, 
                      a2, 
                      a3, 
                      a4, 
                      a5, 
                      a6, 
                      a7, 
                      b0, 
                      b1, 
                      b2, 
                      b3, 
                      b4, 
                      b5, 
                      b6, 
                      b7, 
                      o1, 
                      o2, 
                      o3, 
                      o4, 
                      o5, 
                      o6, 
                      o7, 
                      o8, 
                      o9);

    input a0;
    input a1;
    input a2;
    input a3;
    input a4;
    input a5;
    input a6;
    input a7;
    input b0;
    input b1;
    input b2;
    input b3;
    input b4;
    input b5;
    input b6;
    input b7;
   output o1;
   output o2;
   output o3;
   output o4;
   output o5;
   output o6;
   output o7;
   output o8;
   output o9;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_14;
   wire XLXN_35;
   
   fullAdder_MUSER_Lab8  XLXI_1 (.A(a0), 
                                .B(b0), 
                                .C(XLXN_35), 
                                .Carray(XLXN_1), 
                                .SUM(o1));
   fullAdder_MUSER_Lab8  XLXI_2 (.A(a1), 
                                .B(b1), 
                                .C(XLXN_1), 
                                .Carray(XLXN_14), 
                                .SUM(o2));
   fullAdder_MUSER_Lab8  XLXI_3 (.A(a2), 
                                .B(b2), 
                                .C(XLXN_14), 
                                .Carray(XLXN_2), 
                                .SUM(o3));
   fullAdder_MUSER_Lab8  XLXI_4 (.A(a3), 
                                .B(b3), 
                                .C(XLXN_2), 
                                .Carray(XLXN_3), 
                                .SUM(o4));
   fullAdder_MUSER_Lab8  XLXI_5 (.A(a4), 
                                .B(b4), 
                                .C(XLXN_3), 
                                .Carray(XLXN_4), 
                                .SUM(o5));
   fullAdder_MUSER_Lab8  XLXI_6 (.A(a5), 
                                .B(b5), 
                                .C(XLXN_4), 
                                .Carray(XLXN_5), 
                                .SUM(o6));
   fullAdder_MUSER_Lab8  XLXI_7 (.A(a6), 
                                .B(b6), 
                                .C(XLXN_5), 
                                .Carray(XLXN_6), 
                                .SUM(o7));
   fullAdder_MUSER_Lab8  XLXI_8 (.A(a7), 
                                .B(b7), 
                                .C(XLXN_6), 
                                .Carray(o9), 
                                .SUM(o8));
   GND  XLXI_9 (.G(XLXN_35));
endmodule
`timescale 1ns / 1ps

module Lab8(clock, 
            DP0, 
            DP1, 
            DP2, 
            DP3, 
            DP4, 
            DP5, 
            DP6, 
            DP7, 
            SW0, 
            SW1, 
            SW2, 
            SW3, 
            SW4, 
            SW5, 
            SW6, 
            SW7, 
            a, 
            b, 
            c, 
            com0, 
            com1, 
            com2, 
            com3, 
            d, 
            e, 
            f, 
            g);

    input clock;
    input DP0;
    input DP1;
    input DP2;
    input DP3;
    input DP4;
    input DP5;
    input DP6;
    input DP7;
    input SW0;
    input SW1;
    input SW2;
    input SW3;
    input SW4;
    input SW5;
    input SW6;
    input SW7;
   output a;
   output b;
   output c;
   output com0;
   output com1;
   output com2;
   output com3;
   output d;
   output e;
   output f;
   output g;
   
   wire XLXN_39;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_64;
   
   Sum_MUSER_Lab8  XLXI_1 (.a0(SW0), 
                          .a1(SW1), 
                          .a2(SW2), 
                          .a3(SW3), 
                          .a4(SW4), 
                          .a5(SW5), 
                          .a6(SW6), 
                          .a7(SW7), 
                          .b0(DP0), 
                          .b1(DP1), 
                          .b2(DP2), 
                          .b3(DP3), 
                          .b4(DP4), 
                          .b5(DP5), 
                          .b6(DP6), 
                          .b7(DP7), 
                          .o1(XLXN_44), 
                          .o2(XLXN_45), 
                          .o3(XLXN_46), 
                          .o4(XLXN_47), 
                          .o5(XLXN_48), 
                          .o6(XLXN_49), 
                          .o7(XLXN_50), 
                          .o8(XLXN_51), 
                          .o9(XLXN_39));
   mux16_4_MUSER_Lab8  XLXI_7 (.Clock(XLXN_64), 
                              .In0_0(XLXN_44), 
                              .In0_1(XLXN_45), 
                              .In0_2(XLXN_46), 
                              .In0_3(XLXN_47), 
                              .In1_0(XLXN_48), 
                              .In1_1(XLXN_49), 
                              .In1_2(XLXN_50), 
                              .In1_3(XLXN_51), 
                              .In3(XLXN_39), 
                              .S0(XLXN_52), 
                              .S1(XLXN_53), 
                              .S2(XLXN_54), 
                              .S3(XLXN_55));
   DIV_MUSER_Lab8  XLXI_10 (.CI(clock), 
                           .CO(XLXN_64));
   selectCommon_MUSER_Lab8  XLXI_11 (.Clock(XLXN_64), 
                                    .com0(com0), 
                                    .com1(com1), 
                                    .com2(com2), 
                                    .com3());
   VCC  XLXI_12 (.P(com3));
   BCD27_MUSER_Lab8  XLXI_15 (.Bit_0(XLXN_52), 
                             .Bit_1(XLXN_53), 
                             .Bit_2(XLXN_54), 
                             .Bit_3(XLXN_55), 
                             .A_7(a), 
                             .B_7(b), 
                             .C_7(c), 
                             .D_7(d), 
                             .E_7(e), 
                             .F_7(f), 
                             .G_7(g));
endmodule
