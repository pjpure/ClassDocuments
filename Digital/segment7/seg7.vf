////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : seg7.vf
// /___/   /\     Timestamp : 10/13/2020 20:42:57
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/.Xilinx/segment7/seg7.vf -w C:/.Xilinx/segment7/seg7.sch
//Design Name: seg7
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_seg7(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module seg7(clear, 
            Clock_10, 
            Ja, 
            a, 
            b, 
            c, 
            com1, 
            com2, 
            com3, 
            d, 
            e, 
            f, 
            g);

    input clear;
    input Clock_10;
    input Ja;
   output a;
   output b;
   output c;
   output com1;
   output com2;
   output com3;
   output d;
   output e;
   output f;
   output g;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_30;
   wire XLXN_32;
   wire f_DUMMY;
   
   assign f = f_DUMMY;
   (* HU_SET = "XLXI_1_0" *) 
   FJKC_HXILINX_seg7  XLXI_1 (.C(Clock_10), 
                             .CLR(clear), 
                             .J(XLXN_1), 
                             .K(XLXN_7), 
                             .Q(f_DUMMY));
   (* HU_SET = "XLXI_2_1" *) 
   FJKC_HXILINX_seg7  XLXI_2 (.C(Clock_10), 
                             .CLR(clear), 
                             .J(XLXN_9), 
                             .K(XLXN_2), 
                             .Q(XLXN_7));
   (* HU_SET = "XLXI_3_2" *) 
   FJKC_HXILINX_seg7  XLXI_3 (.C(Clock_10), 
                             .CLR(clear), 
                             .J(Ja), 
                             .K(Ja), 
                             .Q(XLXN_9));
   AND2  XLXI_4 (.I0(XLXN_9), 
                .I1(XLXN_7), 
                .O(XLXN_1));
   OR2  XLXI_5 (.I0(f_DUMMY), 
               .I1(XLXN_9), 
               .O(XLXN_2));
   AND2  XLXI_6 (.I0(XLXN_7), 
                .I1(XLXN_14), 
                .O(XLXN_15));
   AND2  XLXI_7 (.I0(XLXN_9), 
                .I1(f_DUMMY), 
                .O(XLXN_16));
   AND2  XLXI_8 (.I0(XLXN_19), 
                .I1(XLXN_18), 
                .O(XLXN_32));
   AND2  XLXI_9 (.I0(XLXN_20), 
                .I1(XLXN_7), 
                .O(e));
   INV  XLXI_10 (.I(f_DUMMY), 
                .O(XLXN_14));
   OR2  XLXI_11 (.I0(XLXN_16), 
                .I1(XLXN_15), 
                .O(a));
   OR2  XLXI_12 (.I0(XLXN_32), 
                .I1(XLXN_17), 
                .O(b));
   OR2  XLXI_13 (.I0(XLXN_30), 
                .I1(XLXN_7), 
                .O(d));
   OR2  XLXI_14 (.I0(f_DUMMY), 
                .I1(XLXN_7), 
                .O(g));
   OR2  XLXI_15 (.I0(f_DUMMY), 
                .I1(XLXN_9), 
                .O(c));
   AND2  XLXI_16 (.I0(XLXN_9), 
                 .I1(f_DUMMY), 
                 .O(XLXN_30));
   INV  XLXI_17 (.I(f_DUMMY), 
                .O(XLXN_17));
   INV  XLXI_18 (.I(XLXN_7), 
                .O(XLXN_18));
   INV  XLXI_19 (.I(XLXN_9), 
                .O(XLXN_19));
   INV  XLXI_20 (.I(XLXN_9), 
                .O(XLXN_20));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_46 (.I(Ja), 
                 .O(com1));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_47 (.I(Ja), 
                 .O(com2));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) 
   OBUF  XLXI_48 (.I(Ja), 
                 .O(com3));
endmodule
