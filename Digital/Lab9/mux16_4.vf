////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : mux16_4.vf
// /___/   /\     Timestamp : 11/04/2020 15:12:10
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/.Xilinx/lab8/mux16_4.vf -w C:/.Xilinx/lab8/mux16_4.sch
//Design Name: mux16_4
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_mux16_4 (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_mux16_4(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module mux16_4(Clock, 
               In0_0, 
               In0_1, 
               In0_2, 
               In0_3, 
               In1_0, 
               In1_1, 
               In1_2, 
               In1_3, 
               In3, 
               S0, 
               S1, 
               S2, 
               S3);

    input Clock;
    input In0_0;
    input In0_1;
    input In0_2;
    input In0_3;
    input In1_0;
    input In1_1;
    input In1_2;
    input In1_3;
    input In3;
   output S0;
   output S1;
   output S2;
   output S3;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_30;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   
   (* HU_SET = "XLXI_1_16" *) 
   M4_1E_HXILINX_mux16_4  XLXI_1 (.D0(In0_0), 
                                 .D1(In1_0), 
                                 .D2(In3), 
                                 .D3(XLXN_44), 
                                 .E(XLXN_26), 
                                 .S0(XLXN_43), 
                                 .S1(XLXN_42), 
                                 .O(S0));
   (* HU_SET = "XLXI_2_17" *) 
   M4_1E_HXILINX_mux16_4  XLXI_2 (.D0(In0_2), 
                                 .D1(In1_2), 
                                 .D2(XLXN_46), 
                                 .D3(XLXN_14), 
                                 .E(XLXN_11), 
                                 .S0(XLXN_43), 
                                 .S1(XLXN_42), 
                                 .O(S2));
   (* HU_SET = "XLXI_3_18" *) 
   M4_1E_HXILINX_mux16_4  XLXI_3 (.D0(In0_3), 
                                 .D1(In1_3), 
                                 .D2(XLXN_47), 
                                 .D3(XLXN_13), 
                                 .E(XLXN_10), 
                                 .S0(XLXN_43), 
                                 .S1(XLXN_42), 
                                 .O(S3));
   (* HU_SET = "XLXI_4_19" *) 
   CB2CE_HXILINX_mux16_4  XLXI_4 (.C(Clock), 
                                 .CE(XLXN_8), 
                                 .CLR(XLXN_7), 
                                 .CEO(), 
                                 .Q0(XLXN_43), 
                                 .Q1(XLXN_42), 
                                 .TC());
   GND  XLXI_5 (.G(XLXN_7));
   VCC  XLXI_6 (.P(XLXN_8));
   VCC  XLXI_7 (.P(XLXN_10));
   VCC  XLXI_8 (.P(XLXN_11));
   VCC  XLXI_9 (.P(XLXN_26));
   VCC  XLXI_10 (.P(XLXN_27));
   GND  XLXI_11 (.G(XLXN_45));
   (* HU_SET = "XLXI_14_20" *) 
   M4_1E_HXILINX_mux16_4  XLXI_14 (.D0(In0_1), 
                                  .D1(In1_1), 
                                  .D2(XLXN_45), 
                                  .D3(XLXN_30), 
                                  .E(XLXN_27), 
                                  .S0(XLXN_43), 
                                  .S1(XLXN_42), 
                                  .O(S1));
   GND  XLXI_19 (.G(XLXN_46));
   GND  XLXI_20 (.G(XLXN_47));
   VCC  XLXI_21 (.P(XLXN_44));
   VCC  XLXI_22 (.P(XLXN_30));
   VCC  XLXI_23 (.P(XLXN_14));
   VCC  XLXI_24 (.P(XLXN_13));
endmodule
