# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:100) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
nSample = c(1:100)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.01))
sampleAvg = sample(avg_vote,20)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:20) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:20)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))
sampleAvg = sample(avg_vote,20)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:20) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:20)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 100
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 50
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 50
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 50
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 50
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 20
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 20
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
if (n == 1){
s=0
}else{
s <- sd(x)  # standard deviation
}
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 20
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
s <- sd(x)  # standard deviation
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
n = 100
sampleAvg = sample(avg_vote,n)
sampleMean = mean(sampleAvg)
sampleSD = sd(sampleAvg)
sampleMean
cl = c(0.9,0.95,0.99) #Confidence Level
getCI <- function(cl,n,x){
m <- mean(x)  # mean
s <- sd(x)  # standard deviation
# 1.standard error (SE)
se <- s / sqrt(n)
# 2.z-score
z <- qnorm(cl)
# 3.margin error
me <- se * z
# 4.confidence interval
ci <- c(m - me, m + me)
return(ci)
}
lowerOf90 = c()
upperOf90 = c()
meanOf90 = c()
for (i in 1:n) {
lowerOf90[i] = getCI(0.9,i,sampleAvg[1:i])[1]
upperOf90[i] = getCI(0.9,i,sampleAvg[1:i])[2]
meanOf90[i] = mean(sampleAvg[1:i])
}
CL = c("0.9","0.95","0.99")
nSample = c(1:n)
d90 = data.frame(nSample,meanOf90,lowerOf90,upperOf90)
library(ggplot2)
qplot(x    = meanOf90 ,
y    = nSample,
color = nSample,
data = d90,main = "Confidence Interval (CI) of Mean : คะแนนโหวตเฉลี่ยของภาพยนตร์",xlab = "คะแนนโหวตเฉลี่ย(คะแนน)",
ylab = "Confidence Level (CL)") +
geom_errorbar(aes(
xmin  = lowerOf90,
xmax  = upperOf90,
width = 0.1))+ geom_vline(xintercept = mean(avg_vote))
